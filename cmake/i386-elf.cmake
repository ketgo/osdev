# Ssystem info
set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR i386)

# Compiler settings
set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")
set(CMAKE_SYSROOT ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_SYSTEM_PROCESSOR}/sysroot)

# Set compiler
set(CMAKE_C_COMPILER i386-elf-gcc)
set(CMAKE_CXX_COMPILER i386-elf-g++)

# Arch specific source code directory
set(ARCH_DIR ${CMAKE_CURRENT_SOURCE_DIR}/myos/arch/${CMAKE_SYSTEM_PROCESSOR})

# Ctor start files
set(CRTI_SOURCES ${ARCH_DIR}/crti.S)
set(CRTN_SOURCES ${ARCH_DIR}/crtn.S)
execute_process(
    COMMAND ${CMAKE_CXX_COMPILER} ${CFLAGS} ${LDFLAGS} -print-file-name=crtbegin.o
    OUTPUT_VARIABLE CRTBEGIN_SOURCES
    OUTPUT_STRIP_TRAILING_WHITESPACE
)
execute_process(
    COMMAND ${CMAKE_CXX_COMPILER} ${CFLAGS} ${LDFLAGS} -print-file-name=crtend.o
    OUTPUT_VARIABLE CRTEND_SOURCES
    OUTPUT_STRIP_TRAILING_WHITESPACE
)

# Linker script file
set(LINKER_SCRIPT ${ARCH_DIR}/linker.ld)

# Set linker executable
SET(
    CMAKE_C_LINK_EXECUTABLE 
    "<CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> -T ${LINKER_SCRIPT} ${CRTI_SOURCES} ${CRTBEGIN_SOURCES} <OBJECTS> -o <TARGET> <LINK_LIBRARIES> ${CRTEND_SOURCES} ${CRTN_SOURCES}"
)
set(
    CMAKE_CXX_LINK_EXECUTABLE 
    "<CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> -T ${LINKER_SCRIPT} ${CRTI_SOURCES} ${CRTBEGIN_SOURCES} <OBJECTS> -o <TARGET> <LINK_LIBRARIES> ${CRTEND_SOURCES} ${CRTN_SOURCES}"
)

# Set default compile flags
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O2 -g -MD")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2 -g -MD")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)